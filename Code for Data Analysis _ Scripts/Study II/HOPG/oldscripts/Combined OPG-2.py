
# coding: utf-8

# In[3]:

import pandas as pd
import numpy as np
import matplotlib
from  matplotlib import pyplot as plt
import scipy.stats.stats as sss
get_ipython().magic(u'matplotlib inline')
#import pystan
from __future__ import division


# In[4]:

pd.set_option('display.max_columns', None)
pd.set_option('display.max_rows', 30)


# In[5]:

import os
os.getcwd()


# In[8]:

bfasopg = pd.read_csv('../bfas/bfasopg.csv')
bffopg = pd.read_csv('./OPG_II_Pre.csv')
bfasopg = bfasopg.convert_objects(convert_numeric=True)
bffopg = bffopg.convert_objects(convert_numeric=True)


# In[9]:

bfasopg.head()


# In[10]:

bffopg.head()


# In[19]:

bfasopg = bfasopg.drop('mean',1)


# In[20]:

bfas = set(bfasopg.workerid.values.tolist())
bff = set(bffopg.workerid.values.tolist())


# In[21]:

r = list(set.intersection(bfas,bff))


# In[22]:

len(r)


# In[29]:

import os
os.getcwd()


# In[34]:

#### compute overlap between all of study I and study II
S_ONE_ID = pd.read_csv('../../Study I/OPG ANALYSIS/unique_studyI_IDS.csv')


# In[42]:

Soneids = set(S_ONE_ID['0'].values.tolist())


# In[43]:

Stwoids = set.union(bfas,bff)


# In[44]:

total_intersect = list(set.intersection(Soneids,Stwoids))


# In[45]:

len(total_intersect)


# In[23]:

a = bfasopg.merge(bffopg,how='outer')


# In[24]:

a.head()


# In[25]:

#a.to_csv('Combined_OPG.csv')


# In[6]:

a = pd.read_csv('Combined_OPG.csv')


# In[9]:

a.columns


# In[ ]:




# In[11]:

b = a.drop(['Unnamed: 0','Unnamed: 0.1','workerid'],1)


# In[13]:

b.head()


# In[14]:

c = b.corr()


# In[15]:

c.head()


# In[16]:

c.to_csv('SII_Combined_HOPG_EXTRA_Corr_Table.csv'
         )


# In[27]:

len(a)


# In[13]:

bfas_ages = np.array([ 60.,  53.,  35.,  33.,  34.,  21.,  23.,  24.,  20.,  35.,  72.,
        30.,  59.,  34.,  31.,  21.,  34.,  31.,  29.,  49.,  30.,  24.,
        30.,  24.,  30.,  53.,  21.,  38.,  26.,  39.,  46.,  36.,  29.,
        36.,  38.,  69.,  30.,  42.,  34.,  34.,  57.,  29.,  35.,  22.,
        24.,  25.,  56.,  37.,  22.,  19.,  55.,  31.,  48.,  43.,  19.,
        28.,  29.,  28.,  27.,  28.,  28.,  25.,  37.,  45.,  26.,  35.,
        32.,  28.,  28.,  33.,  24.,  64.,  37.,  48.,  26.,  32.,  32.,
        63.,  39.,  27.,  37.,  46.,  26.,  31.,  26.,  24.,  22.,  48.,
        24.,  50.,  25.,  47.,  62.,  61.,  37.,  27.,  22.,  28.,  30.,
        29.,  27.,  39.,  74.,  50.,  37.,  62.,  28.,  33.,  21.,  27.,
        22.,  31.,  57.,  40.,  74.,  34.,  30.,  43.,  35.,  27.,  34.,
        38.,  40.,  36.,  18.,  34.,  34.,  22.,  21.,  25.,  22.,  22.,
        33.,  30.,  43.,  46.,  29.,  25.,  32.,  21.,  33.,  19.,  25.,
        63.,  25.,  32.,  26.,  18.,  21.,  40.,  25.,  33.,  35.,  27.,
        49.,  27.,  31.,  23.,  25.,  22.,  33.,  62.,  37.,  34.,  43.,
        24.,  22.,  59.,  29.,  31.,  26.,  40.,  23.,  55.,  31.,  30.,
        36.,  20.,  26.,  29.,  24.,  27.,  40.,  32.,  32.,  24.,  33.,
        20.,  21.,  41.,  30.,  27.,  24.,  30.,  46.,  36.,  64.,  55.,
        32.,  41.,  46.,  44.,  24.,  47.,  26.,  27.,  30.,  23.,  30.,
        20.,  35.,  24.,  26.,  44.,  31.,  30.,  19.,  19.,  26.,  34.,
        47.,  60.,  28.,  26.,  34.,  25.,  62.,  29.,  48.,  30.,  61.,
        32.,  39.,  19.,  50.,  25.,  53.,  22.,  23.,  24.,  33.,  34.,
        47.,  34.,  30.,  28.,  31.,  40.,  33.,  21.,  44.,  55.,  36.,
        29.,  56.,  22.,  26.,  61.,  35.,  28.,  22.,  49.,  45.,  41.,
        38.,  57.,  31.,  29.,  27.,  68.,  30.,  35.,  63.,  26.,  20.,
        29.,  28.,  38.,  23.,  23.,  26.,  49.,  19.,  59.,  44.,  26.,
        29.,  44.,  20.,  44.,  26.,  24.,  23.,  20.,  36.,  28.,  32.,
        42.,  28.,  22.,  32.,  59.,  23.,  25.,  33.,  31.,  35.,  23.,
        30.,  23.,  34.,  38.,  22.,  20.,  21.,  30.,  44.,  55.,  24.,
        21.,  35.,  38.,  22.,  31.,  23.,  29.,  40.,  28.,  33.,  53.,
        22.,  33.,  35.,  25.,  33.,  25.,  18.,  32.,  32.,  23.,  55.,
        27.,  49.,  23.,  46.,  26.,  24.,  41.,  33.,  47.,  23.,  31.,
        40.,  38.,  21.,  28.,  49.,  34.,  24.,  33.,  22.,  28.,  24.,
        39.,  33.,  25.,  24.,  29.,  31.,  24.,  28.,  33.,  20.,  31.,
        29.,  27.,  61.,  34.,  34.,  20.,  20.,  35.,  41.,  25.,  26.,
        24.,  30.,  25.,  31.,  28.,  26.,  58.,  28.,  28.,  26.,  23.,
        36.,  42.,  50.,  67.,  40.,  30.,  47.,  28.,  37.,  53.,  26.,
        28.,  23.,  28.,  23.,  35.,  54.,  18.,  54.,  28.,  52.,  39.,
        35.])


# In[14]:

bff_ages = np.array([ 50.,  19.,  63.,  24.,  31.,  18.,  25.,  27.,  25.,  51.,  27.,
        26.,  25.,  44.,  33.,  18.,  28.,  25.,  59.,  27.,  18.,  60.,
        29.,  27.,  29.,  30.,  32.,  29.,  43.,  43.,  21.,  29.,  57.,
        34.,  20.,  29.,  30.,  65.,  35.,  23.,  22.,  24.,  39.,  29.,
        22.,  31.,  47.,  24.,  21.,  26.,  39.,  31.,  26.,  20.,  25.,
        29.,  27.,  19.,  45.,  23.,  32.,  54.,  28.,  30.,  26.,  31.,
        23.,  31.,  32.,  30.,  31.,  48.,  48.,  20.,  23.,  29.,  30.,
        27.,  67.,  30.,  21.,  49.,  30.,  38.,  29.,  50.,  22.,  28.,
        32.,  36.,  44.,  30.,  25.,  27.,  24.,  26.,  26.,  58.,  37.,
        29.,  21.,  27.,  24.,  33.,  32.,  22.,  24.,  46.,  27.,  25.,
        20.,  32.,  30.,  24.,  28.,  28.,  28.,  25.,  45.,  31.,  58.,
        31.,  59.,  61.,  59.,  34.,  30.,  29.,  40.,  42.,  30.,  21.,
        26.,  23.,  25.,  27.,  28.,  19.,  25.,  24.,  25.,  25.,  32.,
        18.,  24.,  26.,  57.,  19.,  29.,  35.,  29.,  33.,  22.,  24.,
        27.,  36.,  38.,  29.,  37.,  40.,  59.,  32.,  36.,  36.,  26.,
        22.,  32.,  28.,  46.,  51.,  26.,  23.,  31.,  29.,  23.,  19.,
        26.,  34.,  51.,  25.,  19.,  22.,  25.,  28.,  25.,  60.,  39.,
        28.,  53.,  44.,  32.,  41.,  28.,  28.,  23.,  28.,  41.,  25.,
        44.,  32.,  36.,  21.,  48.,  29.,  51.,  20.,  40.,  18.,  42.,
        32.,  28.,  35.,  25.,  24.,  53.,  21.,  26.,  33.,  48.,  58.,
        23.,  25.,  21.,  55.,  27.,  31.,  27.,  30.,  22.,  35.,  34.,
        33.,  22.,  25.,  29.,  35.,  28.,  38.,  22.,  30.,  28.,  43.,
        32.,  22.,  27.,  27.,  33.,  30.,  31.,  37.,  31.,  25.,  45.,
        19.,  34.,  29.,  34.,  41.,  41.,  27.,  23.,  25.,  28.,  31.,
        32.,  19.,  36.,  34.,  22.,  34.,  40.,  20.,  30.,  55.,  34.,
        22.,  28.,  18.,  62.,  24.,  31.,  26.,  50.,  40.,  28.,  41.,
        49.,  24.,  31.,  22.,  23.,  24.,  35.,  28.,  29.,  27.,  35.,
        25.,  26.,  36.,  57.,  22.,  28.,  26.,  25.,  29.,  55.,  71.,
        21.,  26.,  60.,  22.,  23.,  24.,  24.,  26.,  23.,  32.,  23.,
        25.,  29.,  36.,  63.,  74.,  25.,  23.,  37.,  36.,   4.,  27.,
        31.,  27.,  35.,  49.,  42.,  43.,  31.,  36.,  28.,  39.,  49.,
        53.,  32.,  50.,  39.,  55.,  40.,  66.,  39.,  24.,  34.,  27.,
        22.,  30.,  30.,  28.,  42.,  29.,  37.,  36.,  34.,  29.,  38.,
        48.,  49.,  40.,  38.,  25.,  26.,  23.,  42.,  33.,  22.,  55.,
        32.,  24.,  19.,  43.,  28.,  39.,  37.,  39.,  23.,  51.,  26.,
        23.,  23.,  42.,  30.,  38.,  40.,  63.,  25.,  31.,  32.,  63.,
        31.,  25.,  40.,  24.,  52.,  39.,  37.,  26.,  20.,  21.,  37.,
        24.,  43.,  35.,  27.,  38.,  32.,  34.,  28.,  26.,  30.,  27.,
        32.,  33.,  25.,  34.,  34.,  58.,  25.,  26.,  25.,  47.,  31.,
        21.,  26.,  36.,  31.,  37.,  50.,  25.,  26.,  19.,  23.,  30.,
        34.,  51.,  28.,  19.,  20.,  44.,  25.,  26.,  50.,  28.,  26.,
        22.])


# In[15]:

aa = bff_ages.tolist()


# In[16]:

bb= bfas_ages.tolist()


# In[17]:

aa.extend(bb)


# In[18]:

len(aa)


# In[19]:

aaaa = np.array(aa)


# In[20]:

aaaa.mean()


# In[21]:

aaaa.std()


# In[ ]:




# In[ ]:




# In[ ]:




# In[ ]:



